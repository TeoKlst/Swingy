package gui;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

import model.Hero;
import view.Map;
import model.Villains;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CreateMenu extends JFrame {
    private JPanel MainWindow;
    private JButton createButton;
    public static JTextField textField1;
    private JComboBox ClassNameList;
    private JLabel IntoLabel;
    private JLabel HeroLabel;
    public static String value;
    public static Object item;

    public CreateMenu() {
        add(MainWindow);
        setTitle("Swingy-App HeroCreation");
        setSize(400, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        textField1.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              changed();
            }
            public void removeUpdate(DocumentEvent e) {
              changed();
            }
            public void insertUpdate(DocumentEvent e) {
              changed();
            }
            
            public void changed() {
               if (textField1.getText().contains("\t") || textField1.getText().contains(" ")){
                    IntoLabel.setText("Please choose a single worded name.");
                    createButton.setEnabled(false);
               }
               else if (textField1.getText().equals("")) {
                    IntoLabel.setText("Cannot create with hero with no name.");
                    createButton.setEnabled(false);
               }
               else {
                    IntoLabel.setText("Hero Name");
                    createButton.setEnabled(true);
              }
            }
          });

          class ComboItem {
            private String key;
            private String value;

            public ComboItem(String key, String value)
            {
                this.key = key;
                this.value = value;
            }

            @Override
            public String toString()
            {
                return key;
            }

            public String getKey()
            {
                return key;
            }

            public String getValue()
            {
                return value;
            }
        }

        ClassNameList.addItem(new ComboItem("Mage", "mage"));
        ClassNameList.addItem(new ComboItem("Warrior", "warrior"));
        ClassNameList.addItem(new ComboItem("Assasin", "assasin"));

        createButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                item = ClassNameList.getSelectedItem();
                value = ((ComboItem)item).getValue();
                if (textField1.getText().equals("")) {
                    IntoLabel.setText("Cannot create with hero with no name.");
                    createButton.setEnabled(false);
                }
                else {
                    Hero.createHeroGUI();
                    Map.mapGeneration();
                    Villains.villainGenerate();
                    Map.assignHeroCL();
                    GameMenu gameMenu = new GameMenu();
                    gameMenu.setVisible(true);
                    dispose();
                }
            }
        });

        // item = ClassNameList.getSelectedItem();
        // value = ((ComboItem)item).getValue();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainWindow = new JPanel();
        MainWindow.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 3, new Insets(0, 0, 0, 0), -1, -1));
        createButton = new JButton();
        createButton.setText("Create");
        MainWindow.add(createButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField1 = new JTextField();
        MainWindow.add(textField1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        IntoLabel = new JLabel();
        IntoLabel.setText("Hero Name");
        MainWindow.add(IntoLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        HeroLabel = new JLabel();
        HeroLabel.setText("Hero Class");
        MainWindow.add(HeroLabel, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        MainWindow.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        MainWindow.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        ClassNameList = new JComboBox();
        MainWindow.add(ClassNameList, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainWindow;
    }

}
