package gui;

import javax.swing.*;

import controller.HeroSave;
import view.Map;
import model.Villains;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;

public class LoadMenu extends JFrame {
    private JPanel MainWindow;
    private JButton loadButton;
    private JComboBox HerosNameList;
    private JLabel HeroListLabel;
    private JComboBox heroLoadComboBox;
    public static String saveTitle;
    public static String value;
    public static Object item;
    public static int iCountGUI;
    static String st;
    static BufferedReader br;

    public LoadMenu() {
        add(MainWindow);
        setTitle("Swingy-App HeroLoad");
        setSize(400, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        class ComboItem {
            private String key;
            private String value;

            public ComboItem(String key, String value)
            {
                this.key = key;
                this.value = value;
            }

            @Override
            public String toString()
            {
                return key;
            }

            public String getKey()
            {
                return key;
            }

            public String getValue()
            {
                return value;
            }
        }

        try {
        iCountGUI = 0;
        int index = 0;
        StringBuilder sb = new StringBuilder();
        File inputFile = new File("Swingy/HeroSave.txt");
        br = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile)));
        while ((st = br.readLine()) != null) {
            iCountGUI = iCountGUI + 1;
            index = iCountGUI;
            String[] parts = st.split("\\s+");
            sb.append(st);
            sb.append("\n");
            LoadMenu.saveTitle = (parts[0] + " " + parts[1] + " the " + parts[2]);
            heroLoadComboBox.addItem(new ComboItem(saveTitle, Integer.toString(index)));
        }
        br.close();
        } catch (IOException e){
            e.printStackTrace();
        }

        loadButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                item = heroLoadComboBox.getSelectedItem();
                value = ((ComboItem)item).getValue();
                System.out.println(value);
                try {
                HeroSave.loadHeroGUI();
                } catch (IOException b){
                    b.printStackTrace();
                }
                GameMenu gameMenu = new GameMenu();
                gameMenu.setVisible(true);
                gameMenu.terminalArea.setText("Hero loaded successfully!");
                dispose();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainWindow = new JPanel();
        MainWindow.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        HeroListLabel = new JLabel();
        HeroListLabel.setText("Hero List");
        MainWindow.add(HeroListLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        MainWindow.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        MainWindow.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        MainWindow.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        loadButton = new JButton();
        loadButton.setText("Load");
        MainWindow.add(loadButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        heroLoadComboBox = new JComboBox();
        MainWindow.add(heroLoadComboBox, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainWindow;
    }

}
